// <auto-generated />
using System;
using Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20251005171300_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Domain.Customer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Document")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000001"),
                            CreatedAt = new DateTime(2025, 10, 5, 14, 0, 0, 0, DateTimeKind.Utc),
                            Document = "11144455566",
                            Email = "cliente1@email.com",
                            Name = "Cliente 1"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000002"),
                            CreatedAt = new DateTime(2025, 10, 5, 14, 0, 0, 0, DateTimeKind.Utc),
                            Document = "22244455566",
                            Email = "cliente2@email.com",
                            Name = "Cliente 2"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000003"),
                            CreatedAt = new DateTime(2025, 10, 5, 14, 0, 0, 0, DateTimeKind.Utc),
                            Document = "33344455566",
                            Email = "cliente3@email.com",
                            Name = "Cliente 3"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000004"),
                            CreatedAt = new DateTime(2025, 10, 5, 14, 0, 0, 0, DateTimeKind.Utc),
                            Document = "44444455566",
                            Email = "cliente4@email.com",
                            Name = "Cliente 4"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000005"),
                            CreatedAt = new DateTime(2025, 10, 5, 14, 0, 0, 0, DateTimeKind.Utc),
                            Document = "55544455566",
                            Email = "cliente5@email.com",
                            Name = "Cliente 5"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000006"),
                            CreatedAt = new DateTime(2025, 10, 5, 14, 0, 0, 0, DateTimeKind.Utc),
                            Document = "66644455566",
                            Email = "cliente6@email.com",
                            Name = "Cliente 6"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000007"),
                            CreatedAt = new DateTime(2025, 10, 5, 14, 0, 0, 0, DateTimeKind.Utc),
                            Document = "77744455566",
                            Email = "cliente7@email.com",
                            Name = "Cliente 7"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000008"),
                            CreatedAt = new DateTime(2025, 10, 5, 14, 0, 0, 0, DateTimeKind.Utc),
                            Document = "88844455566",
                            Email = "cliente8@email.com",
                            Name = "Cliente 8"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000009"),
                            CreatedAt = new DateTime(2025, 10, 5, 14, 0, 0, 0, DateTimeKind.Utc),
                            Document = "99944455566",
                            Email = "cliente9@email.com",
                            Name = "Cliente 9"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000010"),
                            CreatedAt = new DateTime(2025, 10, 5, 14, 0, 0, 0, DateTimeKind.Utc),
                            Document = "10101044455566",
                            Email = "cliente10@email.com",
                            Name = "Cliente 10"
                        });
                });

            modelBuilder.Entity("Domain.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uuid");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("Domain.OrderItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<decimal>("LineTotal")
                        .HasColumnType("numeric");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uuid");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderItems");
                });

            modelBuilder.Entity("Domain.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.Property<string>("Sku")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("StockQty")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-000000000001"),
                            CreatedAt = new DateTime(2025, 10, 5, 14, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            Name = "Produto 1",
                            Price = 10m,
                            Sku = "SKU-PROD-001",
                            StockQty = 100
                        },
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-000000000002"),
                            CreatedAt = new DateTime(2025, 10, 5, 14, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            Name = "Produto 2",
                            Price = 20m,
                            Sku = "SKU-PROD-002",
                            StockQty = 100
                        },
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-000000000003"),
                            CreatedAt = new DateTime(2025, 10, 5, 14, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            Name = "Produto 3",
                            Price = 30m,
                            Sku = "SKU-PROD-003",
                            StockQty = 100
                        },
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-000000000004"),
                            CreatedAt = new DateTime(2025, 10, 5, 14, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            Name = "Produto 4",
                            Price = 40m,
                            Sku = "SKU-PROD-004",
                            StockQty = 100
                        },
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-000000000005"),
                            CreatedAt = new DateTime(2025, 10, 5, 14, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            Name = "Produto 5",
                            Price = 50m,
                            Sku = "SKU-PROD-005",
                            StockQty = 100
                        },
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-000000000006"),
                            CreatedAt = new DateTime(2025, 10, 5, 14, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            Name = "Produto 6",
                            Price = 60m,
                            Sku = "SKU-PROD-006",
                            StockQty = 100
                        },
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-000000000007"),
                            CreatedAt = new DateTime(2025, 10, 5, 14, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            Name = "Produto 7",
                            Price = 70m,
                            Sku = "SKU-PROD-007",
                            StockQty = 100
                        },
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-000000000008"),
                            CreatedAt = new DateTime(2025, 10, 5, 14, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            Name = "Produto 8",
                            Price = 80m,
                            Sku = "SKU-PROD-008",
                            StockQty = 100
                        },
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-000000000009"),
                            CreatedAt = new DateTime(2025, 10, 5, 14, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            Name = "Produto 9",
                            Price = 90m,
                            Sku = "SKU-PROD-009",
                            StockQty = 100
                        },
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-000000000010"),
                            CreatedAt = new DateTime(2025, 10, 5, 14, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            Name = "Produto 10",
                            Price = 100m,
                            Sku = "SKU-PROD-010",
                            StockQty = 100
                        },
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-000000000011"),
                            CreatedAt = new DateTime(2025, 10, 5, 14, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            Name = "Produto 11",
                            Price = 110m,
                            Sku = "SKU-PROD-011",
                            StockQty = 100
                        },
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-000000000012"),
                            CreatedAt = new DateTime(2025, 10, 5, 14, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            Name = "Produto 12",
                            Price = 120m,
                            Sku = "SKU-PROD-012",
                            StockQty = 100
                        },
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-000000000013"),
                            CreatedAt = new DateTime(2025, 10, 5, 14, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            Name = "Produto 13",
                            Price = 130m,
                            Sku = "SKU-PROD-013",
                            StockQty = 100
                        },
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-000000000014"),
                            CreatedAt = new DateTime(2025, 10, 5, 14, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            Name = "Produto 14",
                            Price = 140m,
                            Sku = "SKU-PROD-014",
                            StockQty = 100
                        },
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-000000000015"),
                            CreatedAt = new DateTime(2025, 10, 5, 14, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            Name = "Produto 15",
                            Price = 150m,
                            Sku = "SKU-PROD-015",
                            StockQty = 100
                        },
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-000000000016"),
                            CreatedAt = new DateTime(2025, 10, 5, 14, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            Name = "Produto 16",
                            Price = 160m,
                            Sku = "SKU-PROD-016",
                            StockQty = 100
                        },
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-000000000017"),
                            CreatedAt = new DateTime(2025, 10, 5, 14, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            Name = "Produto 17",
                            Price = 170m,
                            Sku = "SKU-PROD-017",
                            StockQty = 100
                        },
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-000000000018"),
                            CreatedAt = new DateTime(2025, 10, 5, 14, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            Name = "Produto 18",
                            Price = 180m,
                            Sku = "SKU-PROD-018",
                            StockQty = 100
                        },
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-000000000019"),
                            CreatedAt = new DateTime(2025, 10, 5, 14, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            Name = "Produto 19",
                            Price = 190m,
                            Sku = "SKU-PROD-019",
                            StockQty = 100
                        },
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-000000000020"),
                            CreatedAt = new DateTime(2025, 10, 5, 14, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            Name = "Produto 20",
                            Price = 200m,
                            Sku = "SKU-PROD-020",
                            StockQty = 100
                        });
                });

            modelBuilder.Entity("Domain.Order", b =>
                {
                    b.HasOne("Domain.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("Domain.OrderItem", b =>
                {
                    b.HasOne("Domain.Order", "Order")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Domain.Order", b =>
                {
                    b.Navigation("OrderItems");
                });
#pragma warning restore 612, 618
        }
    }
}
